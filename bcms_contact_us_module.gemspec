# Generated by jeweler
# DO NOT EDIT THIS FILE
# Instead, edit Jeweler::Tasks in Rakefile, and run `rake gemspec`
# -*- encoding: utf-8 -*-

Gem::Specification.new do |s|
  s.name = %q{bcms_contact_us_module}
  s.version = "1.1.2"

  s.required_rubygems_version = Gem::Requirement.new(">= 0") if s.respond_to? :required_rubygems_version=
  s.authors = ["Freddy Andersen"]
  s.date = %q{2011-01-11}
  s.description = %q{A BrowserCMS module that gives you a contact us portlet}
  s.email = %q{freddy@zerolimitstech.com}
  s.extra_rdoc_files = [
    "LICENSE.txt",
     "README.markdown"
  ]
  s.files = [
    "app/controllers/application_controller.rb",
     "app/controllers/cms/bcms_questions_controller.rb",
     "app/helpers/application_helper.rb",
     "app/models/bcms_notifications.rb",
     "app/models/bcms_question.rb",
     "app/portlets/contact_us_portlet.rb",
     "app/portlets/helpers/contact_us_portlet_helper.rb",
     "app/views/cms/bcms_questions/_form.html.erb",
     "app/views/cms/bcms_questions/render.html.erb",
     "app/views/layouts/templates/default.html.erb",
     "app/views/portlets/contact_us/_form.html.erb",
     "app/views/portlets/contact_us/render.html.erb",
     "db/migrate/20101030141654_create_bcms_questions.rb",
     "lib/bcms_contact_us_module.rb",
     "lib/bcms_contact_us_module/routes.rb",
     "rails/init.rb"
  ]
  s.homepage = %q{http://github.com/heimdull/bcms_contact_us_module}
  s.rdoc_options = ["--charset=UTF-8"]
  s.require_paths = ["lib"]
  s.rubygems_version = %q{1.4.1}
  s.summary = %q{Contact Us portlet in BrowserCMS}
  s.test_files = [
    "test/functional/cms/bcms_questions_controller_test.rb",
     "test/performance/browsing_test.rb",
     "test/test_helper.rb",
     "test/unit/bcms_notifications_test.rb",
     "test/unit/bcms_question_test.rb",
     "test/unit/portlets/contact_us_portlet_test.rb"
  ]

  if s.respond_to? :specification_version then
    s.specification_version = 3

    if Gem::Version.new(Gem::VERSION) >= Gem::Version.new('1.2.0') then
    else
    end
  else
  end
end
